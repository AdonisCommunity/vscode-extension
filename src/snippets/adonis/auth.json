{
    "Auth": {
        "body": "${1:auth}.${2|attempt,login,loginViaId,remember,check,getUser,logout,generate,withRefreshToken,generateForRefreshToken,newRefreshToken,listTokens,authenticator,revokeTokens,revokeTokensForUser|}($3)",
        "description": "Adonis Auth",
        "prefix": "auth"
    },
    "Auth attempt": {
        "body": "${1:auth}.attempt(${2:uid}, ${3:password})",
        "description": "Adonis Auth - attempt",
        "prefix": "auth-attempt"
    },
    "Auth login": {
        "body": "${1:auth}.login(${2:user})",
        "description": "Adonis Auth - login",
        "prefix": "auth-login"
    },
    "Auth loginViaId": {
        "body": "${1:auth}.loginViaId(${2:id})",
        "description": "Adonis Auth - loginViaId",
        "prefix": "auth-loginViaId"
    },
    "Auth remember": {
        "body": "${1:auth}.remember(${2:true}).$5attempt(${3:email}, ${4:password})",
        "description": "Adonis Auth - remember",
        "prefix": "auth-remember"
    },
    "Auth check": {
        "body": "${1:auth}.check()",
        "description": "Adonis Auth - check",
        "prefix": "auth-check"
    },
    "Auth getUser": {
        "body": "${1:auth}.getUser()",
        "description": "Adonis Auth - getUser",
        "prefix": "auth-getUser"
    },
    "Auth logout": {
        "body": "${1:auth}.logout()",
        "description": "Adonis Auth - logout",
        "prefix": "auth-logout"
    },
    "Auth generate": {
        "body": "${1:auth}.generate(${2:user}, ${3:jwtPayload}, ${4:jwtOptions})",
        "description": "Adonis Auth - generate",
        "prefix": "auth-generate"
    },
    "Auth withRefreshToken": {
        "body": "${1:auth}.withRefreshToken().$4attempt(${2:uid}, ${3:password})",
        "description": "Adonis Auth - withRefreshToken",
        "prefix": "auth-withRefreshToken"
    },
    "Auth generateForRefreshToken": {
        "body": "${1:auth}.generateForRefreshToken(${2:refreshToken}, ${3:jwtPayload})",
        "description": "Adonis Auth - generateForRefreshToken",
        "prefix": "auth-generateForRefreshToken"
    },
    "Auth newRefreshToken": {
        "body": "${1:auth}.newRefreshToken().$4generateForRefreshToken(${2:refreshToken}, ${3:jwtPayload})",
        "description": "Adonis Auth - newRefreshToken",
        "prefix": "auth-newRefreshToken"
    },
    "Auth listTokens": {
        "body": "${1:auth}.listTokens()",
        "description": "Adonis Auth - listTokens",
        "prefix": "auth-listTokens"
    },
    "Auth authenticator": {
        "body": "${1:auth}.authenticator(${2:authenticator})",
        "description": "Adonis Auth - authenticator",
        "prefix": "auth-authenticator"
    },
    "Auth revokeTokens": {
        "body": "${1:auth}.revokeTokens(${2:tokens = []}, ${3:delete = false})",
        "description": "Adonis Auth - revokeTokens",
        "prefix": "auth-revokeTokens"
    },
    "Auth revokeTokensForUser": {
        "body": "${1:auth}.revokeTokensForUser(${2:user}, ${3:tokens}, ${4:delete = false})",
        "description": "Adonis Auth - revokeTokensForUser",
        "prefix": "auth-revokeTokensForUser"
    }
}